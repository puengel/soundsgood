// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: soundService.proto

package soundsgood

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AudioSample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp string    `protobuf:"bytes,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Channel1  []float64 `protobuf:"fixed64,2,rep,packed,name=Channel1,proto3" json:"Channel1,omitempty"`
	Channel2  []float64 `protobuf:"fixed64,3,rep,packed,name=Channel2,proto3" json:"Channel2,omitempty"`
}

func (x *AudioSample) Reset() {
	*x = AudioSample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soundService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioSample) ProtoMessage() {}

func (x *AudioSample) ProtoReflect() protoreflect.Message {
	mi := &file_soundService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioSample.ProtoReflect.Descriptor instead.
func (*AudioSample) Descriptor() ([]byte, []int) {
	return file_soundService_proto_rawDescGZIP(), []int{0}
}

func (x *AudioSample) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *AudioSample) GetChannel1() []float64 {
	if x != nil {
		return x.Channel1
	}
	return nil
}

func (x *AudioSample) GetChannel2() []float64 {
	if x != nil {
		return x.Channel2
	}
	return nil
}

type SampleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int32 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SampleRequest) Reset() {
	*x = SampleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soundService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest) ProtoMessage() {}

func (x *SampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_soundService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest.ProtoReflect.Descriptor instead.
func (*SampleRequest) Descriptor() ([]byte, []int) {
	return file_soundService_proto_rawDescGZIP(), []int{1}
}

func (x *SampleRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type AudioFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SampleRate  int32 `protobuf:"varint,1,opt,name=SampleRate,proto3" json:"SampleRate,omitempty"`
	NumChannels int32 `protobuf:"varint,2,opt,name=NumChannels,proto3" json:"NumChannels,omitempty"`
	Precision   int32 `protobuf:"varint,3,opt,name=Precision,proto3" json:"Precision,omitempty"`
}

func (x *AudioFormat) Reset() {
	*x = AudioFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soundService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioFormat) ProtoMessage() {}

func (x *AudioFormat) ProtoReflect() protoreflect.Message {
	mi := &file_soundService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioFormat.ProtoReflect.Descriptor instead.
func (*AudioFormat) Descriptor() ([]byte, []int) {
	return file_soundService_proto_rawDescGZIP(), []int{2}
}

func (x *AudioFormat) GetSampleRate() int32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

func (x *AudioFormat) GetNumChannels() int32 {
	if x != nil {
		return x.NumChannels
	}
	return 0
}

func (x *AudioFormat) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

var File_soundService_proto protoreflect.FileDescriptor

var file_soundService_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x63, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x31, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x32, 0x18, 0x03, 0x20, 0x03, 0x28, 0x01, 0x52, 0x08, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x32, 0x22, 0x27, 0x0a, 0x0d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x6d, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x4e, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x4e, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x6f,
	0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2d, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x2e, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x31, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x0c, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42,
	0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75,
	0x65, 0x6e, 0x67, 0x65, 0x6c, 0x2f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x67, 0x6f, 0x6f, 0x64,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_soundService_proto_rawDescOnce sync.Once
	file_soundService_proto_rawDescData = file_soundService_proto_rawDesc
)

func file_soundService_proto_rawDescGZIP() []byte {
	file_soundService_proto_rawDescOnce.Do(func() {
		file_soundService_proto_rawDescData = protoimpl.X.CompressGZIP(file_soundService_proto_rawDescData)
	})
	return file_soundService_proto_rawDescData
}

var file_soundService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_soundService_proto_goTypes = []interface{}{
	(*AudioSample)(nil),   // 0: AudioSample
	(*SampleRequest)(nil), // 1: SampleRequest
	(*AudioFormat)(nil),   // 2: AudioFormat
	(*emptypb.Empty)(nil), // 3: google.protobuf.Empty
}
var file_soundService_proto_depIdxs = []int32{
	1, // 0: AudioStream.GetStream:input_type -> SampleRequest
	3, // 1: AudioStream.GetFormat:input_type -> google.protobuf.Empty
	0, // 2: AudioStream.GetStream:output_type -> AudioSample
	2, // 3: AudioStream.GetFormat:output_type -> AudioFormat
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_soundService_proto_init() }
func file_soundService_proto_init() {
	if File_soundService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_soundService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioSample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soundService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soundService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_soundService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_soundService_proto_goTypes,
		DependencyIndexes: file_soundService_proto_depIdxs,
		MessageInfos:      file_soundService_proto_msgTypes,
	}.Build()
	File_soundService_proto = out.File
	file_soundService_proto_rawDesc = nil
	file_soundService_proto_goTypes = nil
	file_soundService_proto_depIdxs = nil
}
